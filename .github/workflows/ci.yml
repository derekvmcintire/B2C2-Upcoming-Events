name: CI
on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          cd packages/client
          npm ci
          npm install -g vercel

      - name: Debug Vercel Token
        run: |
          echo "Token length: ${#VERCEL_TOKEN}"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      # Step 4: Configure Vercel
      - name: Configure Vercel
        run: |
          vercel pull --yes --environment=development --token=${{ secrets.VERCEL_TOKEN }}
          vercel env pull --environment=development --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      # Step 5: Start Vercel Dev Server
      - name: Start Vercel Dev Server
        run: |
          vercel dev --yes --token=${{ secrets.VERCEL_TOKEN }} &
          echo "Starting Vercel dev server..."

      # Step 6: Wait for Vercel server
      - name: Wait for Vercel server
        run: |
          attempt_counter=0
          max_attempts=100
          
          until $(curl --output /dev/null --silent --head --fail http://localhost:3000); do
            if [ ${attempt_counter} -eq ${max_attempts} ]; then
              echo "Max attempts reached. Vercel server is not running."
              exit 1
            fi
            
            attempt_counter=$(($attempt_counter+1))
            echo "Waiting for Vercel server... (${attempt_counter}/${max_attempts})"
            sleep 2
          done
          
          echo "Vercel server is up!"

      # Step 7: Start Vite
      - name: Start Vite
        run: |
          cd packages/client
          npm run dev &
          echo "Starting Vite server..."

      # Step 8: Wait for Vite server
      - name: Wait for Vite server
        run: |
          attempt_counter=0
          max_attempts=30
          
          until $(curl --output /dev/null --silent --head --fail http://localhost:5173); do
            if [ ${attempt_counter} -eq ${max_attempts} ]; then
              echo "Max attempts reached. Vite server is not running."
              exit 1
            fi
            
            attempt_counter=$(($attempt_counter+1))
            echo "Waiting for Vite server... (${attempt_counter}/${max_attempts})"
            sleep 2
          done
          
          echo "Vite server is up!"

      # Step 9: Install Cypress
      - name: Install Cypress
        run: 
          cd packages/client
          npm install cypress

      # Step 10: Run Cypress Tests
      - name: Run Cypress Tests
        env:
          CYPRESS_BASE_URL: http://localhost:5173
        run: 
          cd packages/client
          npx cypress run --spec "packages/client/cypress/e2e/home/home.cy.ts"

      # Step 11: Cleanup
      - name: Cleanup
        if: always()
        run: |
          cd packages/client
          pkill -f "vite" || true
          pkill -f "vercel dev" || true